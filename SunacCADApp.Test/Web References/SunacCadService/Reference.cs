//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace SunacCADApp.Test.SunacCadService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ArgumentSettingServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ArgumentSettingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback StandardDesignAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDoorByParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllKitchenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllKitchenParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllBathroomOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllBathroomByParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllHandrailByParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAirconditionerByParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback CadFileDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback CadImgDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewCadFileDirOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCadFileDirOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameCadFileDirOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCadDrawingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCadDrawingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ArgumentSettingService() {
            this.Url = global::SunacCADApp.Test.Properties.Settings.Default.SunacCADApp_Test_SunacCadService_ArgumentSettingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event StandardDesignAttributeCompletedEventHandler StandardDesignAttributeCompleted;
        
        /// <remarks/>
        public event GetAllWindowsCompletedEventHandler GetAllWindowsCompleted;
        
        /// <remarks/>
        public event GetWindowsCompletedEventHandler GetWindowsCompleted;
        
        /// <remarks/>
        public event GetAllDoorCompletedEventHandler GetAllDoorCompleted;
        
        /// <remarks/>
        public event GetAllDoorByParamCompletedEventHandler GetAllDoorByParamCompleted;
        
        /// <remarks/>
        public event GetAllKitchenCompletedEventHandler GetAllKitchenCompleted;
        
        /// <remarks/>
        public event GetAllKitchenParamCompletedEventHandler GetAllKitchenParamCompleted;
        
        /// <remarks/>
        public event GetAllBathroomCompletedEventHandler GetAllBathroomCompleted;
        
        /// <remarks/>
        public event GetAllBathroomByParamCompletedEventHandler GetAllBathroomByParamCompleted;
        
        /// <remarks/>
        public event GetAllHandrailByParamCompletedEventHandler GetAllHandrailByParamCompleted;
        
        /// <remarks/>
        public event GetAllAirconditionerByParamCompletedEventHandler GetAllAirconditionerByParamCompleted;
        
        /// <remarks/>
        public event CadFileDownloadCompletedEventHandler CadFileDownloadCompleted;
        
        /// <remarks/>
        public event CadImgDownloadCompletedEventHandler CadImgDownloadCompleted;
        
        /// <remarks/>
        public event NewCadFileDirCompletedEventHandler NewCadFileDirCompleted;
        
        /// <remarks/>
        public event DeleteCadFileDirCompletedEventHandler DeleteCadFileDirCompleted;
        
        /// <remarks/>
        public event RenameCadFileDirCompletedEventHandler RenameCadFileDirCompleted;
        
        /// <remarks/>
        public event GetProjectInfoCompletedEventHandler GetProjectInfoCompleted;
        
        /// <remarks/>
        public event UpdateCadDrawingCompletedEventHandler UpdateCadDrawingCompleted;
        
        /// <remarks/>
        public event DeleteCadDrawingCompletedEventHandler DeleteCadDrawingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StandardDesignAttribute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StandardDesignAttribute(string AtrributeName) {
            object[] results = this.Invoke("StandardDesignAttribute", new object[] {
                        AtrributeName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StandardDesignAttributeAsync(string AtrributeName) {
            this.StandardDesignAttributeAsync(AtrributeName, null);
        }
        
        /// <remarks/>
        public void StandardDesignAttributeAsync(string AtrributeName, object userState) {
            if ((this.StandardDesignAttributeOperationCompleted == null)) {
                this.StandardDesignAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStandardDesignAttributeOperationCompleted);
            }
            this.InvokeAsync("StandardDesignAttribute", new object[] {
                        AtrributeName}, this.StandardDesignAttributeOperationCompleted, userState);
        }
        
        private void OnStandardDesignAttributeOperationCompleted(object arg) {
            if ((this.StandardDesignAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StandardDesignAttributeCompleted(this, new StandardDesignAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllWindows", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllWindows() {
            object[] results = this.Invoke("GetAllWindows", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllWindowsAsync() {
            this.GetAllWindowsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllWindowsAsync(object userState) {
            if ((this.GetAllWindowsOperationCompleted == null)) {
                this.GetAllWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllWindowsOperationCompleted);
            }
            this.InvokeAsync("GetAllWindows", new object[0], this.GetAllWindowsOperationCompleted, userState);
        }
        
        private void OnGetAllWindowsOperationCompleted(object arg) {
            if ((this.GetAllWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllWindowsCompleted(this, new GetAllWindowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWindows", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWindows(double width, double height, string openType, string openNum, string gongNengQu) {
            object[] results = this.Invoke("GetWindows", new object[] {
                        width,
                        height,
                        openType,
                        openNum,
                        gongNengQu});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWindowsAsync(double width, double height, string openType, string openNum, string gongNengQu) {
            this.GetWindowsAsync(width, height, openType, openNum, gongNengQu, null);
        }
        
        /// <remarks/>
        public void GetWindowsAsync(double width, double height, string openType, string openNum, string gongNengQu, object userState) {
            if ((this.GetWindowsOperationCompleted == null)) {
                this.GetWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWindowsOperationCompleted);
            }
            this.InvokeAsync("GetWindows", new object[] {
                        width,
                        height,
                        openType,
                        openNum,
                        gongNengQu}, this.GetWindowsOperationCompleted, userState);
        }
        
        private void OnGetWindowsOperationCompleted(object arg) {
            if ((this.GetWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWindowsCompleted(this, new GetWindowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllDoor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllDoor() {
            object[] results = this.Invoke("GetAllDoor", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDoorAsync() {
            this.GetAllDoorAsync(null);
        }
        
        /// <remarks/>
        public void GetAllDoorAsync(object userState) {
            if ((this.GetAllDoorOperationCompleted == null)) {
                this.GetAllDoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDoorOperationCompleted);
            }
            this.InvokeAsync("GetAllDoor", new object[0], this.GetAllDoorOperationCompleted, userState);
        }
        
        private void OnGetAllDoorOperationCompleted(object arg) {
            if ((this.GetAllDoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDoorCompleted(this, new GetAllDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllDoorByParam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllDoorByParam(double width, string doorType) {
            object[] results = this.Invoke("GetAllDoorByParam", new object[] {
                        width,
                        doorType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDoorByParamAsync(double width, string doorType) {
            this.GetAllDoorByParamAsync(width, doorType, null);
        }
        
        /// <remarks/>
        public void GetAllDoorByParamAsync(double width, string doorType, object userState) {
            if ((this.GetAllDoorByParamOperationCompleted == null)) {
                this.GetAllDoorByParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDoorByParamOperationCompleted);
            }
            this.InvokeAsync("GetAllDoorByParam", new object[] {
                        width,
                        doorType}, this.GetAllDoorByParamOperationCompleted, userState);
        }
        
        private void OnGetAllDoorByParamOperationCompleted(object arg) {
            if ((this.GetAllDoorByParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDoorByParamCompleted(this, new GetAllDoorByParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllKitchen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllKitchen() {
            object[] results = this.Invoke("GetAllKitchen", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllKitchenAsync() {
            this.GetAllKitchenAsync(null);
        }
        
        /// <remarks/>
        public void GetAllKitchenAsync(object userState) {
            if ((this.GetAllKitchenOperationCompleted == null)) {
                this.GetAllKitchenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllKitchenOperationCompleted);
            }
            this.InvokeAsync("GetAllKitchen", new object[0], this.GetAllKitchenOperationCompleted, userState);
        }
        
        private void OnGetAllKitchenOperationCompleted(object arg) {
            if ((this.GetAllKitchenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllKitchenCompleted(this, new GetAllKitchenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllKitchenParam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllKitchenParam(double Width, double Height, string KitchenDoorWindowPosition, string KitchenType, string AirVent) {
            object[] results = this.Invoke("GetAllKitchenParam", new object[] {
                        Width,
                        Height,
                        KitchenDoorWindowPosition,
                        KitchenType,
                        AirVent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllKitchenParamAsync(double Width, double Height, string KitchenDoorWindowPosition, string KitchenType, string AirVent) {
            this.GetAllKitchenParamAsync(Width, Height, KitchenDoorWindowPosition, KitchenType, AirVent, null);
        }
        
        /// <remarks/>
        public void GetAllKitchenParamAsync(double Width, double Height, string KitchenDoorWindowPosition, string KitchenType, string AirVent, object userState) {
            if ((this.GetAllKitchenParamOperationCompleted == null)) {
                this.GetAllKitchenParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllKitchenParamOperationCompleted);
            }
            this.InvokeAsync("GetAllKitchenParam", new object[] {
                        Width,
                        Height,
                        KitchenDoorWindowPosition,
                        KitchenType,
                        AirVent}, this.GetAllKitchenParamOperationCompleted, userState);
        }
        
        private void OnGetAllKitchenParamOperationCompleted(object arg) {
            if ((this.GetAllKitchenParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllKitchenParamCompleted(this, new GetAllKitchenParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllBathroom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllBathroom() {
            object[] results = this.Invoke("GetAllBathroom", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllBathroomAsync() {
            this.GetAllBathroomAsync(null);
        }
        
        /// <remarks/>
        public void GetAllBathroomAsync(object userState) {
            if ((this.GetAllBathroomOperationCompleted == null)) {
                this.GetAllBathroomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllBathroomOperationCompleted);
            }
            this.InvokeAsync("GetAllBathroom", new object[0], this.GetAllBathroomOperationCompleted, userState);
        }
        
        private void OnGetAllBathroomOperationCompleted(object arg) {
            if ((this.GetAllBathroomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllBathroomCompleted(this, new GetAllBathroomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllBathroomByParam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllBathroomByParam(double Width, double Height, string BathroomDoorWindowPosition, string ToiletType, string AirVent) {
            object[] results = this.Invoke("GetAllBathroomByParam", new object[] {
                        Width,
                        Height,
                        BathroomDoorWindowPosition,
                        ToiletType,
                        AirVent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllBathroomByParamAsync(double Width, double Height, string BathroomDoorWindowPosition, string ToiletType, string AirVent) {
            this.GetAllBathroomByParamAsync(Width, Height, BathroomDoorWindowPosition, ToiletType, AirVent, null);
        }
        
        /// <remarks/>
        public void GetAllBathroomByParamAsync(double Width, double Height, string BathroomDoorWindowPosition, string ToiletType, string AirVent, object userState) {
            if ((this.GetAllBathroomByParamOperationCompleted == null)) {
                this.GetAllBathroomByParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllBathroomByParamOperationCompleted);
            }
            this.InvokeAsync("GetAllBathroomByParam", new object[] {
                        Width,
                        Height,
                        BathroomDoorWindowPosition,
                        ToiletType,
                        AirVent}, this.GetAllBathroomByParamOperationCompleted, userState);
        }
        
        private void OnGetAllBathroomByParamOperationCompleted(object arg) {
            if ((this.GetAllBathroomByParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllBathroomByParamCompleted(this, new GetAllBathroomByParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllHandrailByParam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllHandrailByParam(string RailingType) {
            object[] results = this.Invoke("GetAllHandrailByParam", new object[] {
                        RailingType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllHandrailByParamAsync(string RailingType) {
            this.GetAllHandrailByParamAsync(RailingType, null);
        }
        
        /// <remarks/>
        public void GetAllHandrailByParamAsync(string RailingType, object userState) {
            if ((this.GetAllHandrailByParamOperationCompleted == null)) {
                this.GetAllHandrailByParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllHandrailByParamOperationCompleted);
            }
            this.InvokeAsync("GetAllHandrailByParam", new object[] {
                        RailingType}, this.GetAllHandrailByParamOperationCompleted, userState);
        }
        
        private void OnGetAllHandrailByParamOperationCompleted(object arg) {
            if ((this.GetAllHandrailByParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllHandrailByParamCompleted(this, new GetAllHandrailByParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAirconditionerByParam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllAirconditionerByParam(string AirconditionerPower, string AirconditionerPipePosition, string AirconditionerIsRainpipe, string RainpipePosition) {
            object[] results = this.Invoke("GetAllAirconditionerByParam", new object[] {
                        AirconditionerPower,
                        AirconditionerPipePosition,
                        AirconditionerIsRainpipe,
                        RainpipePosition});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAirconditionerByParamAsync(string AirconditionerPower, string AirconditionerPipePosition, string AirconditionerIsRainpipe, string RainpipePosition) {
            this.GetAllAirconditionerByParamAsync(AirconditionerPower, AirconditionerPipePosition, AirconditionerIsRainpipe, RainpipePosition, null);
        }
        
        /// <remarks/>
        public void GetAllAirconditionerByParamAsync(string AirconditionerPower, string AirconditionerPipePosition, string AirconditionerIsRainpipe, string RainpipePosition, object userState) {
            if ((this.GetAllAirconditionerByParamOperationCompleted == null)) {
                this.GetAllAirconditionerByParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAirconditionerByParamOperationCompleted);
            }
            this.InvokeAsync("GetAllAirconditionerByParam", new object[] {
                        AirconditionerPower,
                        AirconditionerPipePosition,
                        AirconditionerIsRainpipe,
                        RainpipePosition}, this.GetAllAirconditionerByParamOperationCompleted, userState);
        }
        
        private void OnGetAllAirconditionerByParamOperationCompleted(object arg) {
            if ((this.GetAllAirconditionerByParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAirconditionerByParamCompleted(this, new GetAllAirconditionerByParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CadFileDownload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CadFileDownload(int Id, string Type) {
            object[] results = this.Invoke("CadFileDownload", new object[] {
                        Id,
                        Type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CadFileDownloadAsync(int Id, string Type) {
            this.CadFileDownloadAsync(Id, Type, null);
        }
        
        /// <remarks/>
        public void CadFileDownloadAsync(int Id, string Type, object userState) {
            if ((this.CadFileDownloadOperationCompleted == null)) {
                this.CadFileDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCadFileDownloadOperationCompleted);
            }
            this.InvokeAsync("CadFileDownload", new object[] {
                        Id,
                        Type}, this.CadFileDownloadOperationCompleted, userState);
        }
        
        private void OnCadFileDownloadOperationCompleted(object arg) {
            if ((this.CadFileDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CadFileDownloadCompleted(this, new CadFileDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CadImgDownload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CadImgDownload(int Id) {
            object[] results = this.Invoke("CadImgDownload", new object[] {
                        Id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CadImgDownloadAsync(int Id) {
            this.CadImgDownloadAsync(Id, null);
        }
        
        /// <remarks/>
        public void CadImgDownloadAsync(int Id, object userState) {
            if ((this.CadImgDownloadOperationCompleted == null)) {
                this.CadImgDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCadImgDownloadOperationCompleted);
            }
            this.InvokeAsync("CadImgDownload", new object[] {
                        Id}, this.CadImgDownloadOperationCompleted, userState);
        }
        
        private void OnCadImgDownloadOperationCompleted(object arg) {
            if ((this.CadImgDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CadImgDownloadCompleted(this, new CadImgDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewCadFileDir", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewCadFileDir(string UID, string OID, string DrawingDir, string ParentDir) {
            object[] results = this.Invoke("NewCadFileDir", new object[] {
                        UID,
                        OID,
                        DrawingDir,
                        ParentDir});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewCadFileDirAsync(string UID, string OID, string DrawingDir, string ParentDir) {
            this.NewCadFileDirAsync(UID, OID, DrawingDir, ParentDir, null);
        }
        
        /// <remarks/>
        public void NewCadFileDirAsync(string UID, string OID, string DrawingDir, string ParentDir, object userState) {
            if ((this.NewCadFileDirOperationCompleted == null)) {
                this.NewCadFileDirOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewCadFileDirOperationCompleted);
            }
            this.InvokeAsync("NewCadFileDir", new object[] {
                        UID,
                        OID,
                        DrawingDir,
                        ParentDir}, this.NewCadFileDirOperationCompleted, userState);
        }
        
        private void OnNewCadFileDirOperationCompleted(object arg) {
            if ((this.NewCadFileDirCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewCadFileDirCompleted(this, new NewCadFileDirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCadFileDir", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCadFileDir(string UID, string OID, string DrawingDir, string ParentDir) {
            object[] results = this.Invoke("DeleteCadFileDir", new object[] {
                        UID,
                        OID,
                        DrawingDir,
                        ParentDir});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCadFileDirAsync(string UID, string OID, string DrawingDir, string ParentDir) {
            this.DeleteCadFileDirAsync(UID, OID, DrawingDir, ParentDir, null);
        }
        
        /// <remarks/>
        public void DeleteCadFileDirAsync(string UID, string OID, string DrawingDir, string ParentDir, object userState) {
            if ((this.DeleteCadFileDirOperationCompleted == null)) {
                this.DeleteCadFileDirOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCadFileDirOperationCompleted);
            }
            this.InvokeAsync("DeleteCadFileDir", new object[] {
                        UID,
                        OID,
                        DrawingDir,
                        ParentDir}, this.DeleteCadFileDirOperationCompleted, userState);
        }
        
        private void OnDeleteCadFileDirOperationCompleted(object arg) {
            if ((this.DeleteCadFileDirCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCadFileDirCompleted(this, new DeleteCadFileDirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RenameCadFileDir", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RenameCadFileDir(string UID, string OID, string DrawingDir, string ParentDir, string NewDrawingDir) {
            object[] results = this.Invoke("RenameCadFileDir", new object[] {
                        UID,
                        OID,
                        DrawingDir,
                        ParentDir,
                        NewDrawingDir});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenameCadFileDirAsync(string UID, string OID, string DrawingDir, string ParentDir, string NewDrawingDir) {
            this.RenameCadFileDirAsync(UID, OID, DrawingDir, ParentDir, NewDrawingDir, null);
        }
        
        /// <remarks/>
        public void RenameCadFileDirAsync(string UID, string OID, string DrawingDir, string ParentDir, string NewDrawingDir, object userState) {
            if ((this.RenameCadFileDirOperationCompleted == null)) {
                this.RenameCadFileDirOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameCadFileDirOperationCompleted);
            }
            this.InvokeAsync("RenameCadFileDir", new object[] {
                        UID,
                        OID,
                        DrawingDir,
                        ParentDir,
                        NewDrawingDir}, this.RenameCadFileDirOperationCompleted, userState);
        }
        
        private void OnRenameCadFileDirOperationCompleted(object arg) {
            if ((this.RenameCadFileDirCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameCadFileDirCompleted(this, new RenameCadFileDirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProjectInfo(string UID) {
            object[] results = this.Invoke("GetProjectInfo", new object[] {
                        UID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectInfoAsync(string UID) {
            this.GetProjectInfoAsync(UID, null);
        }
        
        /// <remarks/>
        public void GetProjectInfoAsync(string UID, object userState) {
            if ((this.GetProjectInfoOperationCompleted == null)) {
                this.GetProjectInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectInfoOperationCompleted);
            }
            this.InvokeAsync("GetProjectInfo", new object[] {
                        UID}, this.GetProjectInfoOperationCompleted, userState);
        }
        
        private void OnGetProjectInfoOperationCompleted(object arg) {
            if ((this.GetProjectInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectInfoCompleted(this, new GetProjectInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCadDrawing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCadDrawing(string UID, string OID, string DrawingDir, string FileSaveName, string DrawingFile) {
            object[] results = this.Invoke("UpdateCadDrawing", new object[] {
                        UID,
                        OID,
                        DrawingDir,
                        FileSaveName,
                        DrawingFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCadDrawingAsync(string UID, string OID, string DrawingDir, string FileSaveName, string DrawingFile) {
            this.UpdateCadDrawingAsync(UID, OID, DrawingDir, FileSaveName, DrawingFile, null);
        }
        
        /// <remarks/>
        public void UpdateCadDrawingAsync(string UID, string OID, string DrawingDir, string FileSaveName, string DrawingFile, object userState) {
            if ((this.UpdateCadDrawingOperationCompleted == null)) {
                this.UpdateCadDrawingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCadDrawingOperationCompleted);
            }
            this.InvokeAsync("UpdateCadDrawing", new object[] {
                        UID,
                        OID,
                        DrawingDir,
                        FileSaveName,
                        DrawingFile}, this.UpdateCadDrawingOperationCompleted, userState);
        }
        
        private void OnUpdateCadDrawingOperationCompleted(object arg) {
            if ((this.UpdateCadDrawingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCadDrawingCompleted(this, new UpdateCadDrawingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCadDrawing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCadDrawing(string UID, string OID, string DrawingDir, string DrawingFile) {
            object[] results = this.Invoke("DeleteCadDrawing", new object[] {
                        UID,
                        OID,
                        DrawingDir,
                        DrawingFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCadDrawingAsync(string UID, string OID, string DrawingDir, string DrawingFile) {
            this.DeleteCadDrawingAsync(UID, OID, DrawingDir, DrawingFile, null);
        }
        
        /// <remarks/>
        public void DeleteCadDrawingAsync(string UID, string OID, string DrawingDir, string DrawingFile, object userState) {
            if ((this.DeleteCadDrawingOperationCompleted == null)) {
                this.DeleteCadDrawingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCadDrawingOperationCompleted);
            }
            this.InvokeAsync("DeleteCadDrawing", new object[] {
                        UID,
                        OID,
                        DrawingDir,
                        DrawingFile}, this.DeleteCadDrawingOperationCompleted, userState);
        }
        
        private void OnDeleteCadDrawingOperationCompleted(object arg) {
            if ((this.DeleteCadDrawingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCadDrawingCompleted(this, new DeleteCadDrawingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void StandardDesignAttributeCompletedEventHandler(object sender, StandardDesignAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StandardDesignAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StandardDesignAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetAllWindowsCompletedEventHandler(object sender, GetAllWindowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllWindowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllWindowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetWindowsCompletedEventHandler(object sender, GetWindowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWindowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWindowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetAllDoorCompletedEventHandler(object sender, GetAllDoorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDoorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDoorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetAllDoorByParamCompletedEventHandler(object sender, GetAllDoorByParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDoorByParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDoorByParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetAllKitchenCompletedEventHandler(object sender, GetAllKitchenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllKitchenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllKitchenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetAllKitchenParamCompletedEventHandler(object sender, GetAllKitchenParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllKitchenParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllKitchenParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetAllBathroomCompletedEventHandler(object sender, GetAllBathroomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllBathroomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllBathroomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetAllBathroomByParamCompletedEventHandler(object sender, GetAllBathroomByParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllBathroomByParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllBathroomByParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetAllHandrailByParamCompletedEventHandler(object sender, GetAllHandrailByParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllHandrailByParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllHandrailByParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetAllAirconditionerByParamCompletedEventHandler(object sender, GetAllAirconditionerByParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAirconditionerByParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAirconditionerByParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CadFileDownloadCompletedEventHandler(object sender, CadFileDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CadFileDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CadFileDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CadImgDownloadCompletedEventHandler(object sender, CadImgDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CadImgDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CadImgDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void NewCadFileDirCompletedEventHandler(object sender, NewCadFileDirCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewCadFileDirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewCadFileDirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeleteCadFileDirCompletedEventHandler(object sender, DeleteCadFileDirCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCadFileDirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCadFileDirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void RenameCadFileDirCompletedEventHandler(object sender, RenameCadFileDirCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameCadFileDirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameCadFileDirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetProjectInfoCompletedEventHandler(object sender, GetProjectInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateCadDrawingCompletedEventHandler(object sender, UpdateCadDrawingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCadDrawingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCadDrawingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeleteCadDrawingCompletedEventHandler(object sender, DeleteCadDrawingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCadDrawingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCadDrawingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591